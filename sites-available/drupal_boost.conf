# -*- mode: nginx; mode: flyspell-prog; mode: autopair; ispell-local-dictionary: "american" -*-
### Boost configuration for Drupal.

## First we try the cache.
location / {
    try_files $uri @cache;
}

## We define a named location for the cache.
location @cache {
    # If there's a cookie with a user ID then that means that
    # it's a logged in user. Relay to Drupal.
    if ($http_cookie ~ "DRUPAL_UID" ) {
        return 405;
    }
    # If the HTTP request method differs from GET or HEAD then
    # relay to Drupal.
    if ($request_method !~ ^(GET|HEAD)$ ) {
        return 405;
    }
    # The error page for the 405 (Method not Allowed) in this
    # context consists in relaying the request to Drupal for
    # processing.
    error_page 405 = @drupal;

    # Now for some header tweaking. We use a date that differs
    # from stock Drupal. Everyone seems to be using their
    # birthdate. Why go against the grain?
    add_header Expires "Tue, 13 Jun 1977 03:45:00 GMT";
    # We bypass all delays in the post-check and pre-check
    # parameters of Cache-Control. Both set to 0.
    add_header Cache-Control "must-revalidate, post-check=0, pre-check=0";
    # Funny...perhaps. Egocentric? Damn right!;
    add_header X-Header "Boost Hel√°s Avril 1.0";
    
    # We try each boost URI in succession, if every one of them
    # fails then relay to Drupal.
    try_files /cache/normal/$host/${uri}_${args}.html /cache/perm/$host/${uri}_.css /cache/perm/$host/${uri}_.js /cache/$host/0$uri.html /cache/$host/0${uri}/index.html @drupal;
}


########### Security measures ########## 

## Restrict access to the strictly necessary PHP files. Reducing the
## scope for exploits. Handling of PHP code and the Drupal event loop.
location = /index.php {
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
    # Filefield Upload progress
    # http://drupal.org/project/filefield_nginx_progress support
    # through the NgninxUploadProgress modules.
    track_uploads uploads 60s;
}

## Boost stats.
location = /boost_stats.php {
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}

## XMLRPC. Comment out if not enabled.
location = /xmlrpc.php {
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}


## Restrict cron access to a specific host.
location = /cron.php {
    allow 127.0.0.1;
    allow 192.168.1.0/24;
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
    error_page 403 =404;
    deny all;
}


## All install, update and related pages are protected via Basic HTTPAuth.
location = /install.php {
    auth_basic "Restricted Access"; # auth realm                          
    auth_basic_user_file .htpasswd-users; # htpasswd file
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}

location = /update.php {
    auth_basic "Restricted Access"; # auth realm                          
    auth_basic_user_file .htpasswd-users; # htpasswd file
    fastcgi_pass phpcgi;
    # To use Apache for serving PHP uncomment the line bellow and
    # comment out the above.
    #proxy_pass http://phpapache;
}


## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404; 
}
