# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-

### Upstream sample configuration for PHP FastCGI using Unix sockets.

## Note that this configuration assumes by default that keepalive
## upstream connections are supported and that you have a Nginx
## version with the fair load balancer.

## Add as many servers as needed. Cf. http://wiki.nginx.org/HttpUpstreamModule.
upstream phpcgi_unix {
    ## Use the least connection algorithm for load balancing. This
    ## algorithm was introduced in versions 1.3.1 and 1.2.2.
    least_conn;

    server unix:/var/run/php-fpm-www0.sock;
    server unix:/var/run/php-fpm-www1.sock;

    ## Add a third pool as a fallback. Remember to add a monitoring upstream.
    #server unix:/var/run/php-fpm-bkp.sock backup;

    ## Create a backend connection cache. Note that this requires
    ## Nginx version greater or equal to 1.1.4.
    ## Cf. http://nginx.org/en/CHANGES. Comment out the following
    ## line if that's not the case.
    keepalive 5;
}

## The upstreams below are used only for monitoring php-fpm status,

## The PHP TCP upstream that corresponds to the first pool: www0.
upstream phpcgi_unix_www0 {
    server unix:/var/run/php-fpm-www0.sock;
}

## The PHP TCP upstream that corresponds to the second pool: www1.
upstream phpcgi_unix_www1 {
    server unix:/var/run/php-fpm-www1.sock;
}


### Configuration of php-fpm status and ping pages. Here we define the
### allowed hosts using the Geo Module. http://wiki.nginx.org/HttpGeoModule

geo $acl_phpcgi_unix_status {
    proxy 0.0.0.0/0; # Comment this line if not behind a reverse proxy, change the IP address if you have the proxy's IP address;
    default 1;
    127.0.0.1 0; # allow on the loopback
    10.0.0.0/8 0; # allow on an internal network
    192.168.1.0/24 0; # allow on an internal network
}
